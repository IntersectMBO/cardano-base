[{"display_html":"<a href=\"#v:testSeed\">testSeed</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Seed.html#t:Seed\" title=\"Cardano.Crypto.Seed\">Seed</a>","name":"testSeed","module":"Bench.Crypto.BenchData","link":"Bench-Crypto-BenchData.html#v:testSeed"},{"display_html":"<a href=\"#v:testBytes\">testBytes</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"testBytes","module":"Bench.Crypto.BenchData","link":"Bench-Crypto-BenchData.html#v:testBytes"},{"display_html":"<a href=\"#v:typicalMsg\">typicalMsg</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"typicalMsg","module":"Bench.Crypto.BenchData","link":"Bench-Crypto-BenchData.html#v:typicalMsg"},{"display_html":"<a href=\"#v:benchmarks\">benchmarks</a> &#8759; <a href=\"../criterion/Criterion-Types.html#t:Benchmark\" title=\"Criterion.Types\">Benchmark</a>","name":"benchmarks","module":"Bench.Crypto.DSIGN","link":"Bench-Crypto-DSIGN.html#v:benchmarks"},{"display_html":"<a href=\"#v:benchmarks\">benchmarks</a> &#8759; <a href=\"../criterion/Criterion-Types.html#t:Benchmark\" title=\"Criterion.Types\">Benchmark</a>","name":"benchmarks","module":"Bench.Crypto.HASH","link":"Bench-Crypto-HASH.html#v:benchmarks"},{"display_html":"<a href=\"#v:benchmarks\">benchmarks</a> &#8759; <a href=\"../criterion/Criterion-Types.html#t:Benchmark\" title=\"Criterion.Types\">Benchmark</a>","name":"benchmarks","module":"Bench.Crypto.KES","link":"Bench-Crypto-KES.html#v:benchmarks"},{"display_html":"<a href=\"#v:benchmarks\">benchmarks</a> &#8759; <a href=\"../criterion/Criterion-Types.html#t:Benchmark\" title=\"Criterion.Types\">Benchmark</a>","name":"benchmarks","module":"Bench.Crypto.VRF","link":"Bench-Crypto-VRF.html#v:benchmarks"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:AllocEvent\">AllocEvent</a><ul class=\"subs\"><li>= <a href=\"#v:AllocEv\">AllocEv</a> !WordPtr</li><li>| <a href=\"#v:FreeEv\">FreeEv</a> !WordPtr</li><li>| <a href=\"#v:MarkerEv\">MarkerEv</a> !<a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a></li></ul>","name":"AllocEvent MarkerEv FreeEv AllocEv","module":"Test.Crypto.AllocLog","link":"Test-Crypto-AllocLog.html#t:AllocEvent"},{"display_html":"<a href=\"#v:mkLoggingAllocator\">mkLoggingAllocator</a> &#8759; <a href=\"../contra-tracer/Control-Tracer.html#t:Tracer\" title=\"Control.Tracer\">Tracer</a> <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> <a href=\"Test-Crypto-AllocLog.html#t:AllocEvent\" title=\"Test.Crypto.AllocLog\">AllocEvent</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Libsodium-Memory-Internal.html#t:MLockedAllocator\" title=\"Cardano.Crypto.Libsodium.Memory.Internal\">MLockedAllocator</a> <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Libsodium-Memory-Internal.html#t:MLockedAllocator\" title=\"Cardano.Crypto.Libsodium.Memory.Internal\">MLockedAllocator</a> <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a>","name":"mkLoggingAllocator","module":"Test.Crypto.AllocLog","link":"Test-Crypto-AllocLog.html#v:mkLoggingAllocator"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:EqST\">EqST</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:equalsM\">equalsM</a> &#8759; <a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m &#8658; a &#8594; a &#8594; m <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a></li></ul>","name":"EqST equalsM","module":"Test.Crypto.EqST","link":"Test-Crypto-EqST.html#t:EqST"},{"display_html":"<a href=\"#v:nequalsM\">nequalsM</a> &#8759; (<a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m, <a href=\"Test-Crypto-EqST.html#t:EqST\" title=\"Test.Crypto.EqST\">EqST</a> a) &#8658; a &#8594; a &#8594; m <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a>","name":"nequalsM","module":"Test.Crypto.EqST","link":"Test-Crypto-EqST.html#v:nequalsM"},{"display_html":"<a href=\"#v:-61--61--33-\">(==!)</a> &#8759; (<a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m, <a href=\"Test-Crypto-EqST.html#t:EqST\" title=\"Test.Crypto.EqST\">EqST</a> a) &#8658; a &#8594; a &#8594; m <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a>","name":"==!","module":"Test.Crypto.EqST","link":"Test-Crypto-EqST.html#v:-61--61--33-"},{"display_html":"<a href=\"#v:-33--61--33-\">(!=!)</a> &#8759; (<a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m, <a href=\"Test-Crypto-EqST.html#t:EqST\" title=\"Test.Crypto.EqST\">EqST</a> a) &#8658; a &#8594; a &#8594; m <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a>","name":"!=!","module":"Test.Crypto.EqST","link":"Test-Crypto-EqST.html#v:-33--61--33-"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:PureEqST\">PureEqST</a> a = <a href=\"#v:PureEqST\">PureEqST</a> a","name":"PureEqST PureEqST","module":"Test.Crypto.EqST","link":"Test-Crypto-EqST.html#t:PureEqST"},{"display_html":"<a href=\"#v:withMLSBFromPSB\">withMLSBFromPSB</a> &#8759; (<a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m, <a href=\"../io-classes/Control-Monad-Class-MonadThrow.html#t:MonadThrow\" title=\"Control.Monad.Class.MonadThrow\">MonadThrow</a> m, <a href=\"../basement/Basement-Nat.html#t:KnownNat\" title=\"Basement.Nat\">KnownNat</a> n) &#8658; <a href=\"../cardano-crypto-class/Cardano-Crypto-PinnedSizedBytes.html#t:PinnedSizedBytes\" title=\"Cardano.Crypto.PinnedSizedBytes\">PinnedSizedBytes</a> n &#8594; (<a href=\"../cardano-crypto-class/Cardano-Crypto-Libsodium-MLockedBytes-Internal.html#t:MLockedSizedBytes\" title=\"Cardano.Crypto.Libsodium.MLockedBytes.Internal\">MLockedSizedBytes</a> n &#8594; m a) &#8594; m a","name":"withMLSBFromPSB","module":"Test.Crypto.Instances","link":"Test-Crypto-Instances.html#v:withMLSBFromPSB"},{"display_html":"<a href=\"#v:withMLockedSeedFromPSB\">withMLockedSeedFromPSB</a> &#8759; (<a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m, <a href=\"../io-classes/Control-Monad-Class-MonadThrow.html#t:MonadThrow\" title=\"Control.Monad.Class.MonadThrow\">MonadThrow</a> m, <a href=\"../basement/Basement-Nat.html#t:KnownNat\" title=\"Basement.Nat\">KnownNat</a> n) &#8658; <a href=\"../cardano-crypto-class/Cardano-Crypto-PinnedSizedBytes.html#t:PinnedSizedBytes\" title=\"Cardano.Crypto.PinnedSizedBytes\">PinnedSizedBytes</a> n &#8594; (<a href=\"../cardano-crypto-class/Cardano-Crypto-Libsodium-MLockedSeed.html#t:MLockedSeed\" title=\"Cardano.Crypto.Libsodium.MLockedSeed\">MLockedSeed</a> n &#8594; m a) &#8594; m a","name":"withMLockedSeedFromPSB","module":"Test.Crypto.Instances","link":"Test-Crypto-Instances.html#v:withMLockedSeedFromPSB"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.Regressions","link":"Test-Crypto-Regressions.html#v:tests"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"#t:RunIO\">RunIO</a> m <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:io\">io</a> &#8759; m a &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a</li></ul>","name":"RunIO io","module":"Test.Crypto.RunIO","link":"Test-Crypto-RunIO.html#t:RunIO"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"../basement/Basement-Compat-Typeable.html#t:Typeable\" title=\"Basement.Compat.Typeable\">Typeable</a> a &#8658; <a href=\"#t:FromCBOR\">FromCBOR</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:fromCBOR\">fromCBOR</a> &#8759; <a href=\"../cborg/Codec-CBOR-Decoding.html#t:Decoder\" title=\"Codec.CBOR.Decoding\">Decoder</a> s a</li></ul>","name":"FromCBOR fromCBOR","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:FromCBOR"},{"display_html":"<span class=\"keyword\">class</span> <a href=\"../basement/Basement-Compat-Typeable.html#t:Typeable\" title=\"Basement.Compat.Typeable\">Typeable</a> a &#8658; <a href=\"#t:ToCBOR\">ToCBOR</a> a <span class=\"keyword\">where</span><ul class=\"subs\"><li><a href=\"#v:toCBOR\">toCBOR</a> &#8759; a &#8594; <a href=\"../cborg/Codec-CBOR-Encoding.html#t:Encoding\" title=\"Codec.CBOR.Encoding\">Encoding</a></li><li><a href=\"#v:encodedSizeExpr\">encodedSizeExpr</a> &#8759; (&#8704; t. <a href=\"Test-Crypto-Util.html#t:ToCBOR\" title=\"Test.Crypto.Util\">ToCBOR</a> t &#8658; Proxy t &#8594; <a href=\"../cardano-binary/Cardano-Binary.html#t:Size\" title=\"Cardano.Binary\">Size</a>) &#8594; Proxy a &#8594; <a href=\"../cardano-binary/Cardano-Binary.html#t:Size\" title=\"Cardano.Binary\">Size</a></li></ul>","name":"ToCBOR toCBOR encodedSizeExpr","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:ToCBOR"},{"display_html":"<a href=\"#v:prop_cbor\">prop_cbor</a> &#8759; (<a href=\"Test-Crypto-Util.html#t:ToCBOR\" title=\"Test.Crypto.Util\">ToCBOR</a> a, <a href=\"Test-Crypto-Util.html#t:FromCBOR\" title=\"Test.Crypto.Util\">FromCBOR</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a) &#8658; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_cbor","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_cbor"},{"display_html":"<a href=\"#v:prop_cbor_size\">prop_cbor_size</a> &#8759; &#8704; a. <a href=\"Test-Crypto-Util.html#t:ToCBOR\" title=\"Test.Crypto.Util\">ToCBOR</a> a &#8658; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_cbor_size","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_cbor_size"},{"display_html":"<a href=\"#v:prop_cbor_with\">prop_cbor_with</a> &#8759; (<a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a) &#8658; (a &#8594; <a href=\"../cborg/Codec-CBOR-Encoding.html#t:Encoding\" title=\"Codec.CBOR.Encoding\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cborg/Codec-CBOR-Decoding.html#t:Decoder\" title=\"Codec.CBOR.Decoding\">Decoder</a> s a) &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_cbor_with","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_cbor_with"},{"display_html":"<a href=\"#v:prop_cbor_valid\">prop_cbor_valid</a> &#8759; (a &#8594; <a href=\"../cborg/Codec-CBOR-Encoding.html#t:Encoding\" title=\"Codec.CBOR.Encoding\">Encoding</a>) &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_cbor_valid","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_cbor_valid"},{"display_html":"<a href=\"#v:prop_cbor_roundtrip\">prop_cbor_roundtrip</a> &#8759; (<a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a) &#8658; (a &#8594; <a href=\"../cborg/Codec-CBOR-Encoding.html#t:Encoding\" title=\"Codec.CBOR.Encoding\">Encoding</a>) &#8594; (&#8704; s. <a href=\"../cborg/Codec-CBOR-Decoding.html#t:Decoder\" title=\"Codec.CBOR.Decoding\">Decoder</a> s a) &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_cbor_roundtrip","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_cbor_roundtrip"},{"display_html":"<a href=\"#v:prop_raw_serialise\">prop_raw_serialise</a> &#8759; (<a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a) &#8658; (a &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>) &#8594; (<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Maybe\" title=\"Prelude.Compat\">Maybe</a> a) &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_raw_serialise","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_raw_serialise"},{"display_html":"<a href=\"#v:prop_raw_deserialise\">prop_raw_deserialise</a> &#8759; &#8704; (a &#8759; Type). <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a &#8658; (<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Maybe\" title=\"Prelude.Compat\">Maybe</a> a) &#8594; <a href=\"Test-Crypto-Util.html#t:BadInputFor\" title=\"Test.Crypto.Util\">BadInputFor</a> a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_raw_deserialise","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_raw_deserialise"},{"display_html":"<a href=\"#v:prop_size_serialise\">prop_size_serialise</a> &#8759; (a &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>) &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Word\" title=\"Prelude.Compat\">Word</a> &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_size_serialise","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_size_serialise"},{"display_html":"<a href=\"#v:prop_cbor_direct_vs_class\">prop_cbor_direct_vs_class</a> &#8759; <a href=\"Test-Crypto-Util.html#t:ToCBOR\" title=\"Test.Crypto.Util\">ToCBOR</a> a &#8658; (a &#8594; <a href=\"../cborg/Codec-CBOR-Encoding.html#t:Encoding\" title=\"Codec.CBOR.Encoding\">Encoding</a>) &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_cbor_direct_vs_class","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_cbor_direct_vs_class"},{"display_html":"<a href=\"#v:prop_no_thunks\">prop_no_thunks</a> &#8759; <a href=\"../nothunks/NoThunks-Class.html#t:NoThunks\" title=\"NoThunks.Class\">NoThunks</a> a &#8658; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_no_thunks","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_no_thunks"},{"display_html":"<a href=\"#v:prop_no_thunks_IO\">prop_no_thunks_IO</a> &#8759; <a href=\"../nothunks/NoThunks-Class.html#t:NoThunks\" title=\"NoThunks.Class\">NoThunks</a> a &#8658; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_no_thunks_IO","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_no_thunks_IO"},{"display_html":"<a href=\"#v:prop_no_thunks_IO_from\">prop_no_thunks_IO_from</a> &#8759; <a href=\"../nothunks/NoThunks-Class.html#t:NoThunks\" title=\"NoThunks.Class\">NoThunks</a> a &#8658; (b &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a) &#8594; b &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_no_thunks_IO_from","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_no_thunks_IO_from"},{"display_html":"<a href=\"#v:prop_no_thunks_IO_with\">prop_no_thunks_IO_with</a> &#8759; <a href=\"../nothunks/NoThunks-Class.html#t:NoThunks\" title=\"NoThunks.Class\">NoThunks</a> a &#8658; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a) &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_no_thunks_IO_with","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:prop_no_thunks_IO_with"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:TestSeed\">TestSeed</a> = <a href=\"#v:TestSeed\">TestSeed</a> {<ul class=\"subs\"><li><a href=\"#v:getTestSeed\">getTestSeed</a> &#8759; (<a href=\"../basement/Basement-Compat-Base.html#t:Word64\" title=\"Basement.Compat.Base\">Word64</a>, <a href=\"../basement/Basement-Compat-Base.html#t:Word64\" title=\"Basement.Compat.Base\">Word64</a>, <a href=\"../basement/Basement-Compat-Base.html#t:Word64\" title=\"Basement.Compat.Base\">Word64</a>, <a href=\"../basement/Basement-Compat-Base.html#t:Word64\" title=\"Basement.Compat.Base\">Word64</a>, <a href=\"../basement/Basement-Compat-Base.html#t:Word64\" title=\"Basement.Compat.Base\">Word64</a>)</li></ul>}","name":"TestSeed TestSeed getTestSeed","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:TestSeed"},{"display_html":"<a href=\"#v:withTestSeed\">withTestSeed</a> &#8759; <a href=\"Test-Crypto-Util.html#t:TestSeed\" title=\"Test.Crypto.Util\">TestSeed</a> &#8594; <a href=\"../crypton/Crypto-Random-Types.html#t:MonadPseudoRandom\" title=\"Crypto.Random.Types\">MonadPseudoRandom</a> <a href=\"../crypton/Crypto-Random.html#t:ChaChaDRG\" title=\"Crypto.Random\">ChaChaDRG</a> a &#8594; a","name":"withTestSeed","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:withTestSeed"},{"display_html":"<a href=\"#v:testSeedToChaCha\">testSeedToChaCha</a> &#8759; <a href=\"Test-Crypto-Util.html#t:TestSeed\" title=\"Test.Crypto.Util\">TestSeed</a> &#8594; <a href=\"../crypton/Crypto-Random.html#t:ChaChaDRG\" title=\"Crypto.Random\">ChaChaDRG</a>","name":"testSeedToChaCha","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:testSeedToChaCha"},{"display_html":"<a href=\"#v:nullTestSeed\">nullTestSeed</a> &#8759; <a href=\"Test-Crypto-Util.html#t:TestSeed\" title=\"Test.Crypto.Util\">TestSeed</a>","name":"nullTestSeed","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:nullTestSeed"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:SizedSeed\">SizedSeed</a> (n &#8759; <a href=\"../basement/Basement-Nat.html#t:Nat\" title=\"Basement.Nat\">Nat</a>)","name":"SizedSeed","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:SizedSeed"},{"display_html":"<a href=\"#v:unSizedSeed\">unSizedSeed</a> &#8759; <a href=\"Test-Crypto-Util.html#t:SizedSeed\" title=\"Test.Crypto.Util\">SizedSeed</a> n &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Seed.html#t:Seed\" title=\"Cardano.Crypto.Seed\">Seed</a>","name":"unSizedSeed","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:unSizedSeed"},{"display_html":"<a href=\"#v:arbitrarySeedOfSize\">arbitrarySeedOfSize</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Word\" title=\"Prelude.Compat\">Word</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-Seed.html#t:Seed\" title=\"Cardano.Crypto.Seed\">Seed</a>","name":"arbitrarySeedOfSize","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:arbitrarySeedOfSize"},{"display_html":"<a href=\"#v:arbitrarySeedBytesOfSize\">arbitrarySeedBytesOfSize</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Word\" title=\"Prelude.Compat\">Word</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"arbitrarySeedBytesOfSize","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:arbitrarySeedBytesOfSize"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:Message\">Message</a> = <a href=\"#v:Message\">Message</a> {<ul class=\"subs\"><li><a href=\"#v:messageBytes\">messageBytes</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a></li></ul>}","name":"Message Message messageBytes","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:Message"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:BadInputFor\">BadInputFor</a> (a &#8759; Type)","name":"BadInputFor","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:BadInputFor"},{"display_html":"<a href=\"#v:genBadInputFor\">genBadInputFor</a> &#8759; &#8704; (a &#8759; Type). <a href=\"../base-compat/Prelude-Compat.html#t:Int\" title=\"Prelude.Compat\">Int</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck-Gen.html#t:Gen\" title=\"Test.QuickCheck.Gen\">Gen</a> (<a href=\"Test-Crypto-Util.html#t:BadInputFor\" title=\"Test.Crypto.Util\">BadInputFor</a> a)","name":"genBadInputFor","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:genBadInputFor"},{"display_html":"<a href=\"#v:shrinkBadInputFor\">shrinkBadInputFor</a> &#8759; &#8704; (a &#8759; Type). <a href=\"Test-Crypto-Util.html#t:BadInputFor\" title=\"Test.Crypto.Util\">BadInputFor</a> a &#8594; [<a href=\"Test-Crypto-Util.html#t:BadInputFor\" title=\"Test.Crypto.Util\">BadInputFor</a> a]","name":"shrinkBadInputFor","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:shrinkBadInputFor"},{"display_html":"<a href=\"#v:showBadInputFor\">showBadInputFor</a> &#8759; &#8704; (a &#8759; Type). <a href=\"Test-Crypto-Util.html#t:BadInputFor\" title=\"Test.Crypto.Util\">BadInputFor</a> a &#8594; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"showBadInputFor","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:showBadInputFor"},{"display_html":"<a href=\"#v:hexBS\">hexBS</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"hexBS","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:hexBS"},{"display_html":"<a href=\"#v:noExceptionsThrown\">noExceptionsThrown</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Applicative\" title=\"Prelude.Compat\">Applicative</a> m &#8658; m <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"noExceptionsThrown","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:noExceptionsThrown"},{"display_html":"<a href=\"#v:doesNotThrow\">doesNotThrow</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Applicative\" title=\"Prelude.Compat\">Applicative</a> m &#8658; m a &#8594; m <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"doesNotThrow","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:doesNotThrow"},{"display_html":"<a href=\"#v:directSerialiseToBS\">directSerialiseToBS</a> &#8759; &#8704; m a. <a href=\"../cardano-crypto-class/Cardano-Crypto-DirectSerialise.html#t:DirectSerialise\" title=\"Cardano.Crypto.DirectSerialise\">DirectSerialise</a> a &#8658; <a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m &#8658; <a href=\"../io-classes/Control-Monad-Class-MonadThrow.html#t:MonadThrow\" title=\"Control.Monad.Class.MonadThrow\">MonadThrow</a> m &#8658; <a href=\"../base-compat/Prelude-Compat.html#t:Int\" title=\"Prelude.Compat\">Int</a> &#8594; a &#8594; m <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"directSerialiseToBS","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:directSerialiseToBS"},{"display_html":"<a href=\"#v:directDeserialiseFromBS\">directDeserialiseFromBS</a> &#8759; &#8704; m a. <a href=\"../cardano-crypto-class/Cardano-Crypto-DirectSerialise.html#t:DirectDeserialise\" title=\"Cardano.Crypto.DirectSerialise\">DirectDeserialise</a> a &#8658; <a href=\"../io-classes/Control-Monad-Class-MonadST.html#t:MonadST\" title=\"Control.Monad.Class.MonadST\">MonadST</a> m &#8658; <a href=\"../io-classes/Control-Monad-Class-MonadThrow.html#t:MonadThrow\" title=\"Control.Monad.Class.MonadThrow\">MonadThrow</a> m &#8658; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; m a","name":"directDeserialiseFromBS","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:directDeserialiseFromBS"},{"display_html":"<a href=\"#v:eitherShowError\">eitherShowError</a> &#8759; (<a href=\"../basement/Basement-Compat-CallStack.html#t:HasCallStack\" title=\"Basement.Compat.CallStack\">HasCallStack</a>, <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> e) &#8658; <a href=\"../base-compat/Prelude-Compat.html#t:Either\" title=\"Prelude.Compat\">Either</a> e a &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a","name":"eitherShowError","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:eitherShowError"},{"display_html":"<span class=\"keyword\">data</span> <a href=\"#t:Lock\">Lock</a>","name":"Lock","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#t:Lock"},{"display_html":"<a href=\"#v:withLock\">withLock</a> &#8759; <a href=\"Test-Crypto-Util.html#t:Lock\" title=\"Test.Crypto.Util\">Lock</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> a","name":"withLock","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:withLock"},{"display_html":"<a href=\"#v:mkLock\">mkLock</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> <a href=\"Test-Crypto-Util.html#t:Lock\" title=\"Test.Crypto.Util\">Lock</a>","name":"mkLock","module":"Test.Crypto.Util","link":"Test-Crypto-Util.html#v:mkLock"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"Test-Crypto-Util.html#t:Lock\" title=\"Test.Crypto.Util\">Lock</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.KES","link":"Test-Crypto-KES.html#v:tests"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"Test-Crypto-Util.html#t:Lock\" title=\"Test.Crypto.Util\">Lock</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.Hash","link":"Test-Crypto-Hash.html#v:tests"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:tests"},{"display_html":"<a href=\"#v:testUtil\">testUtil</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testUtil","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testUtil"},{"display_html":"<a href=\"#v:testScalar\">testScalar</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testScalar","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testScalar"},{"display_html":"<a href=\"#v:testBLSCurve\">testBLSCurve</a> &#8759; &#8704; curve. <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:BLS\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">BLS</a> curve &#8658; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; Proxy curve &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testBLSCurve","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testBLSCurve"},{"display_html":"<a href=\"#v:testPT\">testPT</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testPT","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testPT"},{"display_html":"<a href=\"#v:testPairing\">testPairing</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testPairing","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testPairing"},{"display_html":"<a href=\"#v:loadHexFile\">loadHexFile</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:IO\" title=\"Prelude.Compat\">IO</a> [<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>]","name":"loadHexFile","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:loadHexFile"},{"display_html":"<a href=\"#v:testVectors\">testVectors</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testVectors","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testVectors"},{"display_html":"<a href=\"#v:testVectorPairings\">testVectorPairings</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testVectorPairings","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testVectorPairings"},{"display_html":"<a href=\"#v:testVectorOperations\">testVectorOperations</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testVectorOperations","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testVectorOperations"},{"display_html":"<a href=\"#v:testVectorSerDe\">testVectorSerDe</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testVectorSerDe","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testVectorSerDe"},{"display_html":"<a href=\"#v:testVectorSigAug\">testVectorSigAug</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testVectorSigAug","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testVectorSigAug"},{"display_html":"<a href=\"#v:testVectorLargeDst\">testVectorLargeDst</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"testVectorLargeDst","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testVectorLargeDst"},{"display_html":"<a href=\"#v:testAssoc\">testAssoc</a> &#8759; (<a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> a) &#8658; (a &#8594; a &#8594; a) &#8594; a &#8594; a &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"testAssoc","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testAssoc"},{"display_html":"<a href=\"#v:testCommut\">testCommut</a> &#8759; (<a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> a, <a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> a) &#8658; (a &#8594; a &#8594; a) &#8594; a &#8594; a &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"testCommut","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testCommut"},{"display_html":"<a href=\"#v:prop_repeatedAddition\">prop_repeatedAddition</a> &#8759; &#8704; curve. <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:BLS\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">BLS</a> curve &#8658; <a href=\"../base-compat/Prelude-Compat.html#t:Int\" title=\"Prelude.Compat\">Int</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point</a> curve &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_repeatedAddition","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:prop_repeatedAddition"},{"display_html":"<a href=\"#v:testAddNegYieldsInf\">testAddNegYieldsInf</a> &#8759; &#8704; curve. <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:BLS\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">BLS</a> curve &#8658; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point</a> curve &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a>","name":"testAddNegYieldsInf","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testAddNegYieldsInf"},{"display_html":"<a href=\"#v:testRoundTripEither\">testRoundTripEither</a> &#8759; &#8704; p a err. (<a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> p, <a href=\"../base-compat/Prelude-Compat.html#t:Show\" title=\"Prelude.Compat\">Show</a> err, <a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> p, <a href=\"../base-compat/Prelude-Compat.html#t:Eq\" title=\"Prelude.Compat\">Eq</a> err) &#8658; (p &#8594; a) &#8594; (a &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Either\" title=\"Prelude.Compat\">Either</a> err p) &#8594; p &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"testRoundTripEither","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:testRoundTripEither"},{"display_html":"<a href=\"#v:prop_threePairings\">prop_threePairings</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point1\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point1</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point2\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point2</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a>","name":"prop_threePairings","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:prop_threePairings"},{"display_html":"<a href=\"#v:prop_fourPairings\">prop_fourPairings</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point1\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point1</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point1\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point1</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point1\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point1</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-EllipticCurve-BLS12_381-Internal.html#t:Point2\" title=\"Cardano.Crypto.EllipticCurve.BLS12_381.Internal\">Point2</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Bool\" title=\"Prelude.Compat\">Bool</a>","name":"prop_fourPairings","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:prop_fourPairings"},{"display_html":"<a href=\"#v:prop_randomFailsFinalVerify\">prop_randomFailsFinalVerify</a> &#8759; <a href=\"Test-Crypto-EllipticCurve.html#t:BigInteger\" title=\"Test.Crypto.EllipticCurve\">BigInteger</a> &#8594; <a href=\"Test-Crypto-EllipticCurve.html#t:BigInteger\" title=\"Test.Crypto.EllipticCurve\">BigInteger</a> &#8594; <a href=\"Test-Crypto-EllipticCurve.html#t:BigInteger\" title=\"Test.Crypto.EllipticCurve\">BigInteger</a> &#8594; <a href=\"Test-Crypto-EllipticCurve.html#t:BigInteger\" title=\"Test.Crypto.EllipticCurve\">BigInteger</a> &#8594; <a href=\"../QuickCheck/Test-QuickCheck.html#t:Property\" title=\"Test.QuickCheck\">Property</a>","name":"prop_randomFailsFinalVerify","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#v:prop_randomFailsFinalVerify"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:BigInteger\">BigInteger</a> = <a href=\"#v:BigInteger\">BigInteger</a> <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a>","name":"BigInteger BigInteger","module":"Test.Crypto.EllipticCurve","link":"Test-Crypto-EllipticCurve.html#t:BigInteger"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"Test-Crypto-Util.html#t:Lock\" title=\"Test.Crypto.Util\">Lock</a> &#8594; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.DSIGN","link":"Test-Crypto-DSIGN.html#v:tests"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.VRF","link":"Test-Crypto-VRF.html#v:tests"},{"display_html":"<a href=\"#v:unHex\">unHex</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Either\" title=\"Prelude.Compat\">Either</a> <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"unHex","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:unHex"},{"display_html":"<a href=\"#v:unsafeUnHex\">unsafeUnHex</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"unsafeUnHex","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:unsafeUnHex"},{"display_html":"<span class=\"keyword\">type</span> <a href=\"#t:SignatureResult\">SignatureResult</a> = <a href=\"../base-compat/Prelude-Compat.html#t:Either\" title=\"Prelude.Compat\">Either</a> <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a> ()","name":"SignatureResult","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#t:SignatureResult"},{"display_html":"<span class=\"keyword\">newtype</span> <a href=\"#t:HexStringInCBOR\">HexStringInCBOR</a> = <a href=\"#v:HexCBOR\">HexCBOR</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"HexStringInCBOR HexCBOR","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR"},{"display_html":"<a href=\"#v:sKeyParser\">sKeyParser</a> &#8759; &#8704; d. <a href=\"Test-Crypto-Util.html#t:FromCBOR\" title=\"Test.Crypto.Util\">FromCBOR</a> (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SignKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SignKeyDSIGN</a> d) &#8658; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SignKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SignKeyDSIGN</a> d","name":"sKeyParser","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:sKeyParser"},{"display_html":"<a href=\"#v:vKeyParser\">vKeyParser</a> &#8759; &#8704; d. <a href=\"Test-Crypto-Util.html#t:FromCBOR\" title=\"Test.Crypto.Util\">FromCBOR</a> (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> d) &#8658; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> d","name":"vKeyParser","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:vKeyParser"},{"display_html":"<a href=\"#v:sigParser\">sigParser</a> &#8759; &#8704; d. <a href=\"Test-Crypto-Util.html#t:FromCBOR\" title=\"Test.Crypto.Util\">FromCBOR</a> (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> d) &#8658; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a> &#8594; <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> d","name":"sigParser","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:sigParser"},{"display_html":"<a href=\"#v:dropBytes\">dropBytes</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Int\" title=\"Prelude.Compat\">Int</a> &#8594; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a> &#8594; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a>","name":"dropBytes","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:dropBytes"},{"display_html":"<a href=\"#v:hexByteStringLength\">hexByteStringLength</a> &#8759; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a> &#8594; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a>","name":"hexByteStringLength","module":"Test.Crypto.Vector.SerializationUtils","link":"Test-Crypto-Vector-SerializationUtils.html#v:hexByteStringLength"},{"display_html":"<a href=\"#v:invalidEcdsaSigLengthError\">invalidEcdsaSigLengthError</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a> &#8594; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"invalidEcdsaSigLengthError","module":"Test.Crypto.Vector.StringConstants","link":"Test-Crypto-Vector-StringConstants.html#v:invalidEcdsaSigLengthError"},{"display_html":"<a href=\"#v:invalidSchnorrVerKeyLengthError\">invalidSchnorrVerKeyLengthError</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a> &#8594; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"invalidSchnorrVerKeyLengthError","module":"Test.Crypto.Vector.StringConstants","link":"Test-Crypto-Vector-StringConstants.html#v:invalidSchnorrVerKeyLengthError"},{"display_html":"<a href=\"#v:invalidEcdsaVerKeyLengthError\">invalidEcdsaVerKeyLengthError</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a> &#8594; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"invalidEcdsaVerKeyLengthError","module":"Test.Crypto.Vector.StringConstants","link":"Test-Crypto-Vector-StringConstants.html#v:invalidEcdsaVerKeyLengthError"},{"display_html":"<a href=\"#v:invalidSchnorrSigLengthError\">invalidSchnorrSigLengthError</a> &#8759; <a href=\"../base-compat/Prelude-Compat.html#t:Integer\" title=\"Prelude.Compat\">Integer</a> &#8594; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"invalidSchnorrSigLengthError","module":"Test.Crypto.Vector.StringConstants","link":"Test-Crypto-Vector-StringConstants.html#v:invalidSchnorrSigLengthError"},{"display_html":"<a href=\"#v:cannotDecodeVerificationKeyError\">cannotDecodeVerificationKeyError</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"cannotDecodeVerificationKeyError","module":"Test.Crypto.Vector.StringConstants","link":"Test-Crypto-Vector-StringConstants.html#v:cannotDecodeVerificationKeyError"},{"display_html":"<a href=\"#v:unexpectedDecodingError\">unexpectedDecodingError</a> &#8759; <a href=\"../base-compat/Data-String-Compat.html#t:String\" title=\"Data.String.Compat\">String</a>","name":"unexpectedDecodingError","module":"Test.Crypto.Vector.StringConstants","link":"Test-Crypto-Vector-StringConstants.html#v:unexpectedDecodingError"},{"display_html":"<a href=\"#v:defaultSKey\">defaultSKey</a> &#8759; &#8704; d. <a href=\"Test-Crypto-Util.html#t:FromCBOR\" title=\"Test.Crypto.Util\">FromCBOR</a> (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SignKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SignKeyDSIGN</a> d) &#8658; <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SignKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SignKeyDSIGN</a> d","name":"defaultSKey","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:defaultSKey"},{"display_html":"<a href=\"#v:defaultMessage\">defaultMessage</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>","name":"defaultMessage","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:defaultMessage"},{"display_html":"<a href=\"#v:signAndVerifyTestVectors\">signAndVerifyTestVectors</a> &#8759; &#8704; d. <a href=\"Test-Crypto-Util.html#t:FromCBOR\" title=\"Test.Crypto.Util\">FromCBOR</a> (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SignKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SignKeyDSIGN</a> d) &#8658; [(<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SignKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SignKeyDSIGN</a> d, <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>)]","name":"signAndVerifyTestVectors","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:signAndVerifyTestVectors"},{"display_html":"<a href=\"#v:wrongEcdsaVerKeyTestVector\">wrongEcdsaVerKeyTestVector</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>","name":"wrongEcdsaVerKeyTestVector","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:wrongEcdsaVerKeyTestVector"},{"display_html":"<a href=\"#v:wrongSchnorrVerKeyTestVector\">wrongSchnorrVerKeyTestVector</a> &#8759; <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-SchnorrSecp256k1.html#t:SchnorrSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.SchnorrSecp256k1\">SchnorrSecp256k1DSIGN</a>","name":"wrongSchnorrVerKeyTestVector","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:wrongSchnorrVerKeyTestVector"},{"display_html":"<a href=\"#v:wrongLengthMessageHashTestVectors\">wrongLengthMessageHashTestVectors</a> &#8759; [<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>]","name":"wrongLengthMessageHashTestVectors","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:wrongLengthMessageHashTestVectors"},{"display_html":"<a href=\"#v:ecdsaVerKeyAndSigVerifyTestVectors\">ecdsaVerKeyAndSigVerifyTestVectors</a> &#8759; (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>)","name":"ecdsaVerKeyAndSigVerifyTestVectors","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:ecdsaVerKeyAndSigVerifyTestVectors"},{"display_html":"<a href=\"#v:schnorrVerKeyAndSigVerifyTestVectors\">schnorrVerKeyAndSigVerifyTestVectors</a> &#8759; (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-SchnorrSecp256k1.html#t:SchnorrSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.SchnorrSecp256k1\">SchnorrSecp256k1DSIGN</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-SchnorrSecp256k1.html#t:SchnorrSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.SchnorrSecp256k1\">SchnorrSecp256k1DSIGN</a>)","name":"schnorrVerKeyAndSigVerifyTestVectors","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:schnorrVerKeyAndSigVerifyTestVectors"},{"display_html":"<a href=\"#v:ecdsaMismatchMessageAndSignature\">ecdsaMismatchMessageAndSignature</a> &#8759; [(<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>)]","name":"ecdsaMismatchMessageAndSignature","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:ecdsaMismatchMessageAndSignature"},{"display_html":"<a href=\"#v:schnorrMismatchMessageAndSignature\">schnorrMismatchMessageAndSignature</a> &#8759; [(<a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-SchnorrSecp256k1.html#t:SchnorrSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.SchnorrSecp256k1\">SchnorrSecp256k1DSIGN</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-SchnorrSecp256k1.html#t:SchnorrSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.SchnorrSecp256k1\">SchnorrSecp256k1DSIGN</a>)]","name":"schnorrMismatchMessageAndSignature","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:schnorrMismatchMessageAndSignature"},{"display_html":"<a href=\"#v:verKeyNotOnCurveTestVectorRaw\">verKeyNotOnCurveTestVectorRaw</a> &#8759; <a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a>","name":"verKeyNotOnCurveTestVectorRaw","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:verKeyNotOnCurveTestVectorRaw"},{"display_html":"<a href=\"#v:wrongLengthVerKeyTestVectorsRaw\">wrongLengthVerKeyTestVectorsRaw</a> &#8759; [<a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a>]","name":"wrongLengthVerKeyTestVectorsRaw","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:wrongLengthVerKeyTestVectorsRaw"},{"display_html":"<a href=\"#v:ecdsaWrongLengthSigTestVectorsRaw\">ecdsaWrongLengthSigTestVectorsRaw</a> &#8759; [<a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a>]","name":"ecdsaWrongLengthSigTestVectorsRaw","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:ecdsaWrongLengthSigTestVectorsRaw"},{"display_html":"<a href=\"#v:schnorrWrongLengthSigTestVectorsRaw\">schnorrWrongLengthSigTestVectorsRaw</a> &#8759; [<a href=\"Test-Crypto-Vector-SerializationUtils.html#t:HexStringInCBOR\" title=\"Test.Crypto.Vector.SerializationUtils\">HexStringInCBOR</a>]","name":"schnorrWrongLengthSigTestVectorsRaw","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:schnorrWrongLengthSigTestVectorsRaw"},{"display_html":"<a href=\"#v:ecdsaNegSigTestVectors\">ecdsaNegSigTestVectors</a> &#8759; (<a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:VerKeyDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">VerKeyDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-Hash-Class.html#t:ByteString\" title=\"Cardano.Crypto.Hash.Class\">ByteString</a>, <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-Class.html#t:SigDSIGN\" title=\"Cardano.Crypto.DSIGN.Class\">SigDSIGN</a> <a href=\"../cardano-crypto-class/Cardano-Crypto-DSIGN-EcdsaSecp256k1.html#t:EcdsaSecp256k1DSIGN\" title=\"Cardano.Crypto.DSIGN.EcdsaSecp256k1\">EcdsaSecp256k1DSIGN</a>)","name":"ecdsaNegSigTestVectors","module":"Test.Crypto.Vector.Vectors","link":"Test-Crypto-Vector-Vectors.html#v:ecdsaNegSigTestVectors"},{"display_html":"<a href=\"#v:tests\">tests</a> &#8759; <a href=\"../tasty/Test-Tasty-Providers.html#t:TestTree\" title=\"Test.Tasty.Providers\">TestTree</a>","name":"tests","module":"Test.Crypto.Vector.Secp256k1DSIGN","link":"Test-Crypto-Vector-Secp256k1DSIGN.html#v:tests"}]